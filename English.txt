My list of problems
1) Why go list -m all produces
example.com/hello
golang.org/x/mod v0.8.0
golang.org/x/sys v0.5.0
golang.org/x/text v0.8.0
golang.org/x/tools v0.6.0
rsc.io/quote v1.5.2
rsc.io/sampler v1.3.0

and go.mod file has
require (
	golang.org/x/text v0.8.0 // indirect
	rsc.io/quote v1.5.2 // indirect
	rsc.io/sampler v1.3.0 // indirect
)

Problems with Gonum offical page

Hello,

In the talk "Talks -> An Introduction to Gonum" (https://go-talks.appspot.com/github.com/gonum/talks/2017/gonumtour.slide#1) at the page

Best regards,
Kamil Ziemian


„Miłosierny” to taki, który niektórym okazuje miłosierdzie, choć miał prawo ich ukarać. Ten który uniewinni wszystkich, jest zwyczajnie niesprawiedliwy, czytaj: pozbawiony sprawiedliwości.


I not a Go expert, so I don't know if this `select' will work properly. After sending first int to `ch' two lines of code with compete for receiving from this channel:
`fmt.Println(<-ch)'
`case <- ch:'
Code will work as intended only if the first line always win, but can we be sure that always be so?

Can I help with Gonum official page?

There is a second such example just below "[]int and []int", but to understand it we need some more type declarations, I listed them below.
`type (
	A0 = []string
	A1 = A0
	A2 = struct{ a, b int }
	A3 = int
	A4 = func(A3, float64) *A0
	A5 = func(x int, _ float64) *[]string

	B0 A0
	B1 []string
	B2 struct{ a, b int }
	B3 struct{ a, c int }
	B4 func(int, float64) *B0
	B5 func(x int, y float64) *A1

	// Unimportant part.
)`
The line in question is
"struct{ a, b *B5 } and struct{ a, b *B5 }"
which is true, but again feel out of place. I only start grasping rules of types identity, but I make guess that it should be something like
"struct{ a, b *A5 } and struct{ a, b *B5 }"

Of course it my just be that I'm just stupid. Feel free to inform me that indeed I have no idea what is going on in the Go Spec.

Best regards,
Kamil
