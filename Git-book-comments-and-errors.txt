Do przeczytania.
Przed rozdziałem 4.2: https://github.com/progit/progit2/issues/210
Przed rozdziałem 5.3: https://github.com/progit/progit2/issues/516
Przed rozdziałem 8.2: https://github.com/progit/progit2/issues/563



Przeczytać jeszcze raz podrozdział ,,Remote Branches'' i sprawdzić, czy temat są tam omawiane we właściwej kolejności.



Sprawdzić, czy wszystkie linki w książce działają.
Działają na stronie: 1, 9, 12, 13, 14, 16, 17, 24, 25, 31, 34, 42, 43, 44, 
46, 47, 48, 52, 53, 63, 68, 78, 85, 89, 91, 93, 95,




Czy w książce jest wystarczająco jasno napisane, że ,,working directory'' i ,,working tree'' to jedno i to samo?

Pierwszy commit może nosić nazwę (root-commit). A co z init commit i tak dalej?

Spróbuj sprawić, by więcej podrozdziałów zaczynało się wraz z nową stroną. I tak jest dużo pustego miejsca na stronach ze względu na potrzebę umieszczania wydruków teminala (rzadziej rysunków).



Page 5.
U mnie lista pomniejszych współautorów jest pusta.



Page 6.
you should already be pretty useful wielding Git in the time it
takes you to go pick up another copy. ???????????????

will go over in full detail various distributed workflows??????

Throughout the
book, we will refer to sections of this chapter in case you feel like diving deep at that point;?????



Page 9.
"central place.  For many years,"
Sprawdź, czy da się zmniejszyć ten odstęp.



Page 15.
The working tree is a single checkout of one version of the project. These files are pulled out of the
compressed database in the Git directory and placed on disk for you to use or modify.
Nie jest dla mnie do końca jasne co ten tekst oznacza.



Page 16.
Dodać uwagę, że informacje jakie dostajesz po wpisaniu komendy Gita, także mogą zależeć od wersji której używasz.
Czy napisać: będziemy czasem zwracać uwagę na to, kiedy informacja zwrotna zależy od użytej wersji Gita?



Page 18.
Na stronie https://github.com/git/git/releases nie ma żadnych releasów. Sprawdzić skąd to wynika.



Page 19.
Może komentarz o tym, że ściągnęliśmy Gita 2.8.0 i dla niego są podane te komendy?

,,Unsurprisingly, you need to be located somewhere in a Git repository for this option to work properly."
Może da się to napisać zgrabniej?



Page 20.
`git config --list --show-origin` dodać informację o użyciu q by zrobić quit? To zły pomysł.
Lepiej napisać co powinno się umieć z obsługi terminala zanim przystąpi się do lektury tej książki.



Page 21.
Za mało jest tu napisane o git init. Tekst w ,,Your default branch name'' jest w ogóle mało zrozumiały
dla osób, które dopiero zaczynają z Gitem. Może da się go napisać w bardziej przystęny sposób?

,,In this case, Git uses the last value for each unique key it sees.'' Ostatnia wartość wedle jakiego kryterium?



Page 22.
`man git-help` wyrzuca mi błąd po Windowsem.

"value for one of these values" -> "value for one of these variables"?



Page 24.
configure and initialize a repository -> intiialize and configure a repository???



Page 25.
,,and checks out a working copy of the latest version." Może da się to napisać jaśniej?
Czytelnik może jeszcze nie wiedzieć co robi `git checkout branch`.

Czytnik PDF rozpoznaje https:// jako klikalny link.



Page 26.
Przedtem były trzy stany plików, teraz jest mowa o dwóch. Rozumiem o co chodzi, ale warto byłoby to uzgodnić w tekście.



Page 28.
„to do other things like marking merge-conflicted files as resolved.”
Czytelni może jeszcze nie wiedzieć o co chodzi z merge conflikt.

Changes to be committed:
(use "git reset HEAD <file>..." to unstage)
or
(use "git restore --staged <file>..." to unstage)???



Page 29.
Jak zgrabnie napisać, że „vim file” to skórt od edycji pliku edytorem vim?

$ vim CONTRIBUTING.md
$ git status



Page 31.
# ignore all files in any directory named build
build/
Czy to znaczy, że ignoruje też sam katalog build/???



Page 35.
Sprawdź, czy tekst na górze strony wygląda jak ten w używnaje przez ciebie wersji Vima.

You can remove these comments and type your commit message, or you can leave them there to help you remember what you’re committing.
Jak rozumiem, jeśli nie usuniemy z początku linii znaku #, to tekst tej linii nie znajdzie się w wiadomości zatwierdzenia.

When you exit the editor, Git creates your commit with that commit message (with the comments
and diff stripped out).????



Page 36.
To remove a file from Git, you have to remove it from your tracked files (more accurately, remove it
from your staging area) and then commit. The git rm command does that, and also removes the file
from your working directory so you don’t see it as an untracked file the next time around.
Ten tekst można napisać w lepszy sposób.

Należy dodać ostrzeżenie, jak silną komendą zwykle jest rm.

To remove a file from Git, you have to remove it from your tracked files (more accurately, remove it from your staging area) and then commit. ??



Page 37.
Another useful thing you may want to do is to keep the file in your working tree but remove it from
your staging area.

Napisać komentarz o tym co jak wygląda rezultat komendy `git status --short`, gdy usunęliśmy jakieś pliki.

Może dodać komentarz na temat "filename expansion".

In version 2.1.348-2-ga76dfab, 2022-07-19, Figure 6 has "Stage Fixes". Since over five years passes, should this issue remain open?

It seems that there are no big plans to make a new edition of this book, which seems to me to be only feasible thing to do, that can make justice for eight years of Git development from 2014 to 2022. But, this is only my opinion, I may be wrong.

Git figures out that it’s a rename implicitly, so it doesn’t matter if you rename a file that way or with
the mv command. Czy to jest komentarz do komendy git mv?



Page 40.
,,@@ -18,8 +18,3 @@ class SimpleGit
end
end
-
-if $0 == __FILE__
- git = SimpleGit.new
- puts git.show
-end''
To mi wygląda na niepełny diff, bo nie ma linii ze znakiem plus. Jak zrozumiesz lepiej działanie diff, to wróć i sprawdź to jeszcze raz.



Page 41.
git log --pretty=oneline
"Initial commit" or "first commit"? To samo w poprzednich punktach.



Page 43.
Zademonstrować --graph dla innego niż używane repozytorium. git://github.com/dustin/grit???
Czy to byłby dobry pomysł?

,,Show only the first few characters of the SHA-1 checksum instead of all 40.''
Czy ten opis `git log --abbrev-commit` dobrze oddaje co ta komenda robi?

Tabela 3 jest przydko podzielona między strony 44 i 45.



Page 45.
Co oznacza `-- t/` w pierwszym bloku powłoki na tej stronie?

„Of the nearly 40,000 commits in the Git source” W której chwili czasu było to 40,000 commitów dla Gita? Dziś jest ich pewnie więcej.

"This command takes your staging area and uses it for the commit." -> This command takes your staging area and add its content to that from previously made commit. Then it creates new commit that will overwrite this made previoulsy.????

"You can edit the message the same as always, but it overwrites your previous commit." -> You can edit the message the same as always, but remember that you previous commint will be replaced by this one.

Warto spróbować przerobić tekst z podrozdziału ,,Undoing Things''.



Page 46.
git reset HEAD <file>... -> git restore --staged <file>

Only amend commits that are still local and have -> You can only amend commits that are still local and have

Na dole strony
git reset HEAD <file>… (kropki w książce są za wysoko).



Page 47.
"git checkout -- <file>..." -> "git restore <file>..."



Page 48.
(see Data Recovery for data recovery). -> (see Data Recovery for more details).

"Unstaging a Staged File with git restore" Ten rozdział jest jakby copy-pastem jednego z poprzednich.

Czy restore jest mniej niebezpieczny, niż reset?



Page 49.

git restore --staged <file>… (kropki w książce są zbyt wysoko)



Page 50.
Dodać komentarz o gałęziach i tym, że będą w następnym rozdziale. Na tej stronie, albo gdzieś wcześniej.

Add comment "we explain push, pull and fetch in the future".

Dodać komentarz o krótszy (-h) i dłuższych (--help) wersjach komend Gita.



Page 51.
Add comment about push, pull and fetch.

Dodaj informacje o usuwaniu "remote repository".



Page 52.
Jak dokładnie działa fetch?

Add comment "For now you just need to know, that in your repository you have now parallel access to both repoistory that you cloned and probably already modified and to work of Paul."

"After you do this, you should have references to all the branches from that
remote, which you can merge in or inspect at any time." Co to są gałęzie gita, to zostanie dopiero omówione.

"Pushing to Your Remotes" make beginning of the text more user friendly.

Potrzeba więcej informacji o git pull i gałęziach.

Master branch, main branch? Jak to wyjaśnić?



Page 53.
,,git remote show:'' (na końcu strony)
Czy tu nie powinno być `git remote show`???



Page 54.
"are no longer using a particular mirror" -> "they are no longer using a particular mirror"?



Page 55.
"Listing tag wildcards requires -l or --list option" Ten fragment nie jest zbyt jasny.



Page 56.
Nie jest podane do którego commita zostanie dodany tworzony tag.

Znowu mowa o gałęziach, a przecież to dopiero następny rozdział.



Page 57.
,,This is basically the commit checksum stored in a file — no other information is kept.''
Jak to się ma do tego, że lekki tag to wskaźnik do zatwierdzenia?



Page 59.
"`git push` pushes both types of tags" -> "`git push <remote>` pushes both types of tags"?

Sprawdzić czy w nowej wersji można już przesłać tylko lekkie tagi.

W rozdziale "Git basics" brakuje fragmentu na temat tego jak stworzyć repozytorium Gita od zera.



Page 60.
,,If you do this and make a commit, your version2 branch will be slightly different than your v2.0.0
tag since it will move forward with your new changes, so do be careful.
O co tu chodzi?



Page 63.
„Staging the files computes a checksum for each one (the SHA-1 hash we mentioned in What is Git?), stores that version of the file in the Git repository (Git refers to them as blobs), and adds that checksum to the staging area:”
Nie do końca rozumiem co to znaczy, że suma kontrolna trafia na scenę (staging area).

the root project tree -> root of the project tree???



Page 64.
Nazwa domyślna głównej gałęzi to obecnie „master”, czy „main”?

The default branch name in Git is master. (or main depending on the version????)



Page 66.
Tutaj powinna być chyba informacja, że `git branch` pokazuje ci dostępne gałęzie. Ja bym to umieścił na początku „Switching Branches”.

Pojedyncze słowo "branch" na górze strony.

Nie widzę różnicy między
git log -1 --oneline
a
git log -1 --oneline --decorate



Page 67.
Obramówki szarych węzłów w diagramie 14 nie wyglądają najlepiej. Ich obramówka nie jest pełna.



Page 69.
„Creating a new branch is as quick and simple as writing 41 bytes to a file (40 characters and a newline).”
A co z wyliczeniem sumy kontrolnej???



Page 72.
Strzałki na Figure 20 należy poprawić.



Page 76.
Napisać więcej o three-way merge.



Page 79.
v1) Czy nie warto byłoby napisać o tym, że `git branch` pokaże ci gałęzie, w momencie gdy była mowa o tym,
jak zobaczyć gałęzie za pomocą `git log`?

v2) Dodać przy okazji logów informacje o tym, że jak zobaczyć jakie są dostępne gałęzie będziemy mówić później.



Page 80.
Przerzucić tytuł "Changing a branch name" na stronę 81.



Page 84.
Popraw ,,(iss91v2)''.



Page 86.
,,Remote references are references (pointers) in your remote repositories, including branches, tags,
and so on.''
Po lekturze tych słów ciężko zrozumieć o co chodzi z tym remote references.

,,Nevertheless, a more common way is to take advantage of remote-tracking branches.''
To zdanie jest bardzo niejasne.



Page 87.
Czy dobrze rozumiem, że origin/master jest obiektem lokalym? Jeśli tak, może da się to silniej 
zaznaczyć w tekście.



Page 90.
,,Figure 33. Adding another server as a remote'' Ja bym to nazwał ,,Structure of servers in company,
after adding one team'', czy coś takiego. Bo na rysunku nie ma jeszcze pokazanego repozytorium z dodanym
nowym remotem.



Page 91.
,,Figure 34. Remote-tracking branch for teamone/master'' Ja bym ten rysunek nazwał ,,Figure 33. Adding another server as a remote''.



Page 92.
Co tekst na tej stronie mówi nam o tym jak działa fetch?

,,Checking out a local branch from a remote-tracking branch automatically creates what is called a''
Domyślam się, że przez ,,checking out'' należy rozumieć działanie ostatniej komendy na tej stronie.



Page 93.
,,ones that track branches on other remotes, or don’t track the master branch.''
-> ,,ones that track other origin branches than master or track branches on other remotes''.

,,If you already have a local branch and want to set it to a remote branch you just pulled down,''
Domyślam się, że jesteśmy na lokalnej gałęzi o której jest tu mowa, nie tylko, że ją mamy gdzieś w repozytorium.

Jeszcze do poprzedniego tekstu. ,,set it to a remote branch you just pulled down''. Tu chyba powinn być ,,set it up
to track a remote branch''. Nie rozumiem zaś o co chodzi w ,,you just pulled down''. Jeśli zrobiliśmy ,,git pull origin 
somebranch'', to czy nie powinniśmy mieć tej gałęzi na miejscu wraz z wszystkimi plikami? Po co więc ustawiać
jakąś inną gałąź by tą gałąź śledziła?

Wydaje się, że teraz `git checkout origin/somebranch` działa tak samo jak `git checkout --track origin/somebranch`


Page 94.
,,While the git fetch command will fetch all the changes on the server that you don’t have yet, it will
not modify your working directory at all. It will simply get the data for you and let you merge it
yourself.''
Wydaje mi się to sprzecze z tym co napisano wcześniej, że fetch nie kopiuje danych, tylko tworzy odpowiedni wskaźnik z metadanymi (dobrze użyłem słowa ,,metadane''?).







Mam problem ze zrozumieniem jak `git fetch origin`, a potem użyty `git merge origin/branch` działają.

Jak po `git fetch origin` zobaczyć jakie gałęzie mam dostępne by zrobić `git merge origin/branch`.






Wydaje się, że do pewnej wersji Gita jeśli usunąłeś samemu plik file.txt, to aby git uznał jego usunięcie trzeba było wykonać komendę
git add file.txt
W wersji Gita 2.37 (zapewne też w wielu wcześniejszych) można w tej sytuacji użyć
git rm file.txt.





GitHub issues do zrobienia.
https://github.com/progit/progit2/issues/279
https://github.com/progit/progit2/issues/339
https://github.com/progit/progit2/issues/357 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/388 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/411 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/426 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/462 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/566
https://github.com/progit/progit2/issues/571 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/605
https://github.com/progit/progit2/issues/610
https://github.com/progit/progit2/issues/614
https://github.com/progit/progit2/issues/681 Sprawdź, czy wciąż jest aktualne.
https://github.com/progit/progit2/issues/694 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/697 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/720 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/723 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/751 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/793 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/797 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/798 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/804 To jest powiązane z tym co już sobie zanotowałeś.
https://github.com/progit/progit2/issues/822 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/825 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/828 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/832 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/835 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/847 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/854 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/855 Przeczytaj.
https://github.com/progit/progit2/issues/881 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/886 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/890 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/896 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/900 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/905 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/909 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/919 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/920 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/944 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/958 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/977 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/991 Przyjrzyj się temu. Wydaje się, że jest już wcześniejsze issue poruszające ten problem.
https://github.com/progit/progit2/issues/1013 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1030 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1042 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1043 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1050 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1052 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1060 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1084 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1091 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1109 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1117 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1119 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/1120 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1205 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1208 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1254 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1256 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1292 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1309 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1319 Przeczytaj dokładnie.
https://github.com/progit/progit2/issues/1324 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1332 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1349 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1350 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1402 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1425 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1462 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1524 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1529 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1551 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1572 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1597 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1604 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1619 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1623 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1631 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1633 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1635 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1638 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1663 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1673 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1691 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1702 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1714 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1717 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1725 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1726 To już chyba było w innym issue.
https://github.com/progit/progit2/issues/1731 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1745 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1761 Spróbuj coś z tym zrobić.
https://github.com/progit/progit2/issues/1779 Przyjrzyj się temu.
https://github.com/progit/progit2/issues/1784 Przyjrzyj się temu.
