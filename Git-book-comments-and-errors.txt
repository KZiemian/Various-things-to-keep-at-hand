Sprawdzić, czy wszystkie linki w książce działają.
Działają na stronie: 1, 9, 12, 13, 14, 16, 17, 24,

Page 5.
U mnie lista pomniejszych współautorów jest pusta.

Page 6.
you should already be pretty useful wielding Git in the time it
takes you to go pick up another copy. ???????????????

will go over in full detail various distributed workflows??????

Throughout the
book, we will refer to sections of this chapter in case you feel like diving deep at that point;?????

Page 9.
"central place.  For many years,"
Sprawdź, czy da się zmniejszyć ten odstęp.

Page 15.
The working tree is a single checkout of one version of the project. These files are pulled out of the
compressed database in the Git directory and placed on disk for you to use or modify.
Nie jest dla mnie do końca jasne co ten tekst oznacza.

Page 16.
Dodać uwagę, że informacje jakie dostajesz po wpisaniu komendy Gita, także mogą zależeć od wersji której używasz.
Czy napisać: będziemy czasem zwracać uwagę na to, kiedy informacja zwrotna zależy od użytej wersji Gita?

Page 18.
Na stronie https://github.com/git/git/releases nie ma żadnych releasów. Sprawdzić skąd to wynika.

Page 19.
Może komentarz o tym, że ściągnęliśmy Gita 2.8.0 i dla niego są podane te komendy?

,,Unsurprisingly, you need to be located somewhere in a Git repository for this option to work properly." 
Może da się to napisać zgrabniej?

Page 20.
`git config --list --show-origin` dodać informację o użyciu q by zrobić quit.

Page 21.
Za mało jest tu napisane o git init. Tekst w ,,Your default branch name'' jest w ogóle mało zrozumiały
dla osób, które dopiero zaczynają z Gitem. Może da się go napisać w bardziej przystęny sposób?

,,In this case, Git uses the last value for each unique key it sees.'' Ostatnia wartość wedle jakiego kryterium.

Page 22.
`man git-help` wyrzuca mi błąd po Windowsem.

"value for one of these values" -> "value for one of these variables"?

Page 24.
configure and initialize a repository -> intiialize and configure a repository???

Page 25.
,,and checks out a working copy of the latest version." Może da się to napisać jaśniej?
Czytelnik może jeszcze nie wiedzieć co robi `git checkout branch`.

Czytnik PDF rozpoznaje https:// jako klikalny link.

Page 26.
Przedtem były trzy stany plików, teraz jest mowa o dwóch. Rozumiem o co chodzi, ale warto byłoby to uzgodnić w tekście.

Page 28.
Changes to be committed:
(use "git reset HEAD <file>..." to unstage)
or
(use "git restore --staged <file>..." to unstage)???

Page 29.
$ vim CONTRIBUTING.md
$ git status

Page 36.

To remove a file from Git, you have to remove it from your tracked files (more accurately, remove it from your staging area) and then commit. ??

Page 37.
Another useful thing you may want to do is to keep the file in your working tree but remove it from
your staging area.



In version 2.1.348-2-ga76dfab, 2022-07-19, Figure 6 has "Stage Fixes". Since over five years passes, should this issue remain open?

Since over five years pass since opening this issue, I think we can close it.

It seems that there are no big plans to make a new edition of this book, which seems to me to be only feasible thing to do, that can make justice for eight years of Git development from 2014 to 2022. But, this is only my opinion, I may be wrong.

Git figures out that it’s a rename implicitly, so it doesn’t matter if you rename a file that way or with
the mv command. Czy to jest komentarz do komendy git mv?



Add section about using space, Enter and "q" to navigate log entries. And what "\" means in command line.


Page 41.
git log --pretty=oneline
"Initial commit" or "first commit"? To samo w poprzednich punktach.

Page 43.
--graph dla innego niż używane repozytorium. git://github.com/dustin/grit

Page 45.
"This command takes your staging area and uses it for the commit." -> This command takes your staging area and add its content to that from previously made commit. Then it creates new commit that will overwrite this made previoulsy.????

"You can edit the message the same as always, but it overwrites your previous commit." -> You can edit the message the same as always, but remember that you previous comming commint will be replaced by this one.


Page 46.
git reset HEAD <file>... -> git restore --staged <file>

Na dole strony
git reset HEAD <file>… (kropki w książce są za wysoko).


Page 47.
"git checkout -- <file>..." -> "git restore <file>..."

Page 48.
(see Data Recovery for data recovery). -> (see Data Recovery for more details).

"Unstaging a Staged File with git restore" Ten rozdział jest jakby copy-pastem jednego z poprzednich.

Page 49.

git restore --staged <file>… (kropki w książce są zbyt wysoko)




Page 50.
Add comment "we explain push, pull and fetch in the future".

Page 51.
Add comment about push, pull and fetch.

Dodaj informacje o usuwaniu "remote repository".

Page 52.
Add comment "For now you just need to know, that in your repository you have now parallel access to both repoistory that you cloned and probably already modified and to work of Paul."

"After you do this, you should have references to all the branches from that
remote, which you can merge in or inspect at any time." Co to są gałęzie gita, to zostanie dopiero omówione.

"Pushing to Your Remotes" make beginning of the text more user friendly.





Page 54.
"are no longer using a particular mirror" -> "they are no longer using a particular mirror"?

Page 55.
"Listing tag wildcards requires -l or --list option" Ten fragment nie jest zbyt jasny.

Page 56.
Nie jest podane do którego commita zostanie dodany tworzony tag.

Page 59.
"`git push` pushes both types of tags" -> "`git push <remote>` pushes both types of tags"?

Page 59.
Sprawdzić czy w nowej wersji można już przesłać tylko lekkie tagi.

W rozdziale "Git basics" brakuje fragmentu na temat tego jak stworzyć repozytorium Gita od zera.

Page 64.
Nazwa domyślna głównej gałęzi to obecnie „master”, czy „main”?

Page 66.
Pojedyncze słowo "branch" na górze strony.

Nie widzę różnicy między
git log -1 --oneline
a
git log -1 --oneline --decorate

Page 67.

Obramówki szarych węzłów w diagramie 14 nie wyglądają najlepiej. Ich obramówka nie jest pełna.

Co to znaczy „vim test.rm”? Chyba przydałoby się to jakoś wyjaśnić.

Page 72.
Strzałki na Figure 20 należy poprawić.


Page 76.
Napisać więcej o three-way merge.

Page 79.
Czy nie warto byłoby napisać o tym, że `git branch` pokaże ci gałęzie, w momencie gdy była mowa o tym,
jak zobaczyć gałęzie za pomocą `git log`?

Page 80.
Przerzucić tytuł "Changing a branch name" na stronę 81.

Page 84.
Popraw ,,(iss91v2)''.